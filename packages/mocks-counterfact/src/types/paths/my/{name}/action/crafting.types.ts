// This code was automatically generated from an OpenAPI description.
// Do not edit this file. Edit the OpenAPI file instead.
// For more information, see https://github.com/pmcelhaney/counterfact/blob/main/docs/faq-generated-code.md

import type { WideOperationArgument } from "../../../../../types.ts";
import type { OmitValueWhenNever } from "../../../../../types.ts";
import type { COUNTERFACT_RESPONSE } from "../../../../../types.ts";
import type { Context } from "../../../../../routes/_.context.ts";
import type { ResponseBuilderFactory } from "../../../../../types.ts";
import type { CraftingSchema } from "../../../../components/schemas/CraftingSchema.js";
import type { SkillResponseSchema } from "../../../../components/schemas/SkillResponseSchema.js";

export type HTTP_POST = (
  $: OmitValueWhenNever<{
    query: never;
    path: { name: string };
    header: never;
    body: CraftingSchema;
    context: Context;
    response: ResponseBuilderFactory<{
      200: {
        headers: never;
        requiredHeaders: never;
        content: {
          "application/json": {
            schema: SkillResponseSchema;
          };
        };
      };
      404: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      478: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      486: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      493: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      497: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      498: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      499: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
      598: {
        headers: never;
        requiredHeaders: never;
        content: never;
      };
    }>;
    x: WideOperationArgument;
    proxy: (url: string) => COUNTERFACT_RESPONSE;
    user: { username?: string; password?: string };
  }>,
) =>
  | {
      status: 200;
      contentType?: "application/json";
      body?: SkillResponseSchema;
    }
  | {
      status: 404;
    }
  | {
      status: 478;
    }
  | {
      status: 486;
    }
  | {
      status: 493;
    }
  | {
      status: 497;
    }
  | {
      status: 498;
    }
  | {
      status: 499;
    }
  | {
      status: 598;
    }
  | { status: 415; contentType: "text/plain"; body: string }
  | COUNTERFACT_RESPONSE
  | { ALL_REMAINING_HEADERS_ARE_OPTIONAL: COUNTERFACT_RESPONSE };
